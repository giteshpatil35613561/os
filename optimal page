#include <stdio.h>

int main() {
    int pages[100], memory[10];
    int n, frames, i, j, k, faults = 0, memCount = 0;

    printf("Enter number of pages and frame size: ");
    scanf("%d %d", &n, &frames);

    printf("Enter page reference string: ");
    for (i = 0; i < n; i++)
        scanf("%d", &pages[i]);

    // Initialize memory to -1
    for (i = 0; i < frames; i++)
        memory[i] = -1;

    printf("\nPage\tFrames\n");

    for (i = 0; i < n; i++) {
        int found = 0;

        // Check if page is already in memory
        for (j = 0; j < frames; j++) {
            if (memory[j] == pages[i]) {
                found = 1;
                break;
            }
        }

        // If not found → page fault
        if (!found) {
            if (memCount < frames) {
                memory[memCount++] = pages[i];
            } else {
                // Find the page that won’t be used for the longest time
                int farthest = -1, index = -1;
                for (j = 0; j < frames; j++) {
                    int foundFuture = 0;
                    for (k = i + 1; k < n; k++) {
                        if (memory[j] == pages[k]) {
                            if (k > farthest) {
                                farthest = k;
                                index = j;
                            }
                            foundFuture = 1;
                            break;
                        }
                    }
                    if (!foundFuture) {
                        index = j;
                        break;
                    }
                }
                memory[index] = pages[i];
            }
            faults++;
        }

        // Print memory
        printf("%d\t", pages[i]);
        for (j = 0; j < frames; j++) {
            if (memory[j] == -1)
                printf("- ");
            else
                printf("%d ", memory[j]);
        }
        printf("\n");
    }

    printf("\nTotal Page Faults: %d\n", faults);
    return 0;
}
